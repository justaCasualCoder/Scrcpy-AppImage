# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
  - cron: '0 0 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  continue:
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.build.outputs.should-run }}
    steps:
      - name: "Check if there is a new scrcpy release"
        id: "build"
        run: |
         scrcpyver=$(curl "https://api.github.com/repos/Genymobile/scrcpy/tags" | jq -r '.[0].name')
         appimagever=$(curl "https://api.github.com/repos/justaCasualCoder/Scrcpy-AppImage/tags" | jq -r '.[0].name')
         if [[ $scrcpyver == $appimagever ]]; then
             echo "should-run=false" >> $GITHUB_OUTPUT
         else
             echo "should-run=true" >> $GITHUB_OUTPUT
         fi
  # This workflow contains a single job called "build"
  build:
    needs: continue
    if: needs.continue.outputs.build == 'true'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # check out github repo, $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      # make our scripts executable
      - run: chmod +x $GITHUB_WORKSPACE/.github/scripts/setup_scrcpy.sh
      - run: chmod +x $GITHUB_WORKSPACE/.github/scripts/create_appimage.sh

      # install dependencies of scrcpy and builds scrcpy
      - name: Run scrcpy setup script    
        run: $GITHUB_WORKSPACE/.github/scripts/setup_scrcpy.sh
        shell: bash
      
      # bundle dependencies and scrcpy to create appimage
      - name: Run create appimage script
        run: $GITHUB_WORKSPACE/.github/scripts/create_appimage.sh
        shell: bash

      - name: Create info file
        run: |
           echo -e "ref: $GITHUB_REF \ncommit: $GITHUB_SHA\nbuild: $(date +"%Y-%m-%dT%H:%M:%SZ")" \
           > info.txt
      - name: Update release
        uses: pyTooling/Actions/releaser@r0
        with:
          tag: ${{ env.LATEST_TAG }}
          rm: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./scrcpy*.AppImage info.txt
      # upload scrcpy appimage
      - name: Upload output file
        uses: softprops/action-gh-release@v2
        with:
          name: scrcpy-x86_64-${{ env.LATEST_TAG }}.AppImage
          prerelease: False
          make_latest: "true"
          files: |
            ./scrcpy*.AppImage
          
